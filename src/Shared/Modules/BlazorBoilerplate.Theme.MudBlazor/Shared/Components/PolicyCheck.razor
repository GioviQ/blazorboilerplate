<MudText Typo="Typo.h5">Authentication status</MudText>
<AuthorizeView>
    <Authorized>
        <MudAlert Severity="Severity.Info" Class="ma-8" Variant="Variant.Filled">You are authenticated, but some content may require you enable 2fa in your profile.</MudAlert>
    </Authorized>
    <NotAuthorized>
        <MudAlert Severity="Severity.Info" Class="ma-8" Variant="Variant.Filled">You are not authenticated.</MudAlert>
    </NotAuthorized>
</AuthorizeView>

@if (IsAuthenticated)
{
    <MudText Typo="Typo.h6">Policies.TwoFactorEnabled</MudText>
    <AuthorizeView Policy=@Policies.TwoFactorEnabled>
        <Authorized>
            <MudAlert Severity="Severity.Info" Class="ma-8" Variant="Variant.Filled">2fa is enable.</MudAlert>
        </Authorized>
        <NotAuthorized>
            <MudAlert Severity="Severity.Info" Class="ma-8" Variant="Variant.Filled">2fa is not enable.</MudAlert>
        </NotAuthorized>
    </AuthorizeView>

    @foreach (var uf in Enum.GetValues<UserFeatures>())
    {
        <MudText Typo="Typo.h6">Policies.For(@uf)</MudText>
        <AuthorizeView Policy="@Policies.For(uf)">
            <Authorized>
                <MudAlert Severity="Severity.Info" Class="ma-8" Variant="Variant.Filled">The policy is satisfied.</MudAlert>
            </Authorized>
            <NotAuthorized>
                <MudAlert Severity="Severity.Info" Class="ma-8" Variant="Variant.Filled">The policy is not satisfied.</MudAlert>
            </NotAuthorized>
        </AuthorizeView>
    }

    <MudText Typo="Typo.h6">Claims</MudText>
    @foreach (var claim in User.Claims)
    {
        <MudText><b>@claim.Type</b> @claim.Value</MudText>
    }
}

@code {

    [CascadingParameter]
    Task<AuthenticationState> authenticationStateTask { get; set; }

    private bool IsAuthenticated;

    private ClaimsPrincipal User;

    protected override async Task OnInitializedAsync()
    {
        User = (await authenticationStateTask).User;

        IsAuthenticated = User.Identity.IsAuthenticated;

        await base.OnInitializedAsync();
    }
}
